{
    "contractName": "Lazy",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "minter",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                }
            ],
            "name": "RoleAdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleGranted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleRevoked",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "MINTER_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "availableToWithdraw",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                }
            ],
            "name": "getRoleAdmin",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "hasRole",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "redeemer",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minPrice",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string"
                        }
                    ],
                    "internalType": "struct Lazy.NFTVoucher",
                    "name": "voucher",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                }
            ],
            "name": "redeem",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct Lazy.NFTVoucher\",\"name\":\"voucher\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"redeem(address,(uint256,uint256,string),bytes)\":{\"params\":{\"redeemer\":\"The address of the account which will receive the NFT upon success.\",\"signature\":\"An EIP712 signature of the voucher, produced by the NFT creator.\",\"voucher\":\"An NFTVoucher that describes the NFT to be redeemed.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"redeem(address,(uint256,uint256,string),bytes)\":{\"notice\":\"Redeems an NFTVoucher for an actual NFT, creating it in the process.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/abc/Swati/LazyMinting/contracts/Lazy.sol\":\"Lazy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/abc/Swati/LazyMinting/contracts/Lazy.sol\":{\"keccak256\":\"0x6d962e59a43e104e13230b40afef0c7ca6f233be89eaa748848e25c1ac246afe\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://75ceb3679275dc5331d9b333db9c5ceed90d36d3c6dbef1ac090663b61a2f3fb\",\"dweb:/ipfs/QmY38iercesaiwTQrLdwfrr7vTde667pUummUAZsY5VhYK\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/home/abc/Swati/LazyMinting/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "6101406040523480156200001257600080fd5b50604051620029e3380380620029e383398101604081905262000035916200024c565b6040518060400160405280600f81526020016e2630bd3ca7232a16ab37bab1b432b960891b815250604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016613185e9e53919560ca1b815250604051806040016040528060038152602001622620ad60e91b8152508160009081620000c4919062000323565b506001620000d3828262000323565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909601209052929092526101205250620001917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68262000198565b50620003ef565b620001a48282620001a8565b5050565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff16620001a45760008281526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620002083390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000602082840312156200025f57600080fd5b81516001600160a01b03811681146200027757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a957607f821691505b602082108103620002ca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031e57600081815260208120601f850160051c81016020861015620002f95750805b601f850160051c820191505b818110156200031a5782815560010162000305565b5050505b505050565b81516001600160401b038111156200033f576200033f6200027e565b620003578162000350845462000294565b84620002d0565b602080601f8311600181146200038f5760008415620003765750858301515b600019600386901b1c1916600185901b1785556200031a565b600085815260208120601f198616915b82811015620003c0578886015182559484019460019091019084016200039f565b5085821015620003df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516125a46200043f6000396000611c0301526000611c5201526000611c2d01526000611b8601526000611bb001526000611bda01526125a46000f3fe6080604052600436106101405760003560e01c80636352211e116100b6578063b88d4fde1161006f578063b88d4fde14610386578063c87b56dd146103a6578063d5391393146103c6578063d547741f146103fa578063e322ad2b1461041a578063e985e9c51461043c57600080fd5b80636352211e146102dc57806370a08231146102fc57806391d148541461031c57806395d89b411461033c578063a217fddf14610351578063a22cb4651461036657600080fd5b806323b872dd1161010857806323b872dd14610217578063248a9ca3146102375780632f2ff15d1461026757806336568abe146102875780633ccfd60b146102a757806342842e0e146102bc57600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101d45780631c098e90146101f6575b600080fd5b34801561015157600080fd5b50610165610160366004611ddc565b610485565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f6104a5565b6040516101719190611e51565b3480156101a857600080fd5b506101bc6101b7366004611e64565b610537565b6040516001600160a01b039091168152602001610171565b3480156101e057600080fd5b506101f46101ef366004611e99565b61055e565b005b610209610204366004611f66565b610678565b604051908152602001610171565b34801561022357600080fd5b506101f4610232366004611fe2565b6107f5565b34801561024357600080fd5b50610209610252366004611e64565b60009081526007602052604090206001015490565b34801561027357600080fd5b506101f461028236600461201e565b610826565b34801561029357600080fd5b506101f46102a236600461201e565b61084b565b3480156102b357600080fd5b506101f46108c9565b3480156102c857600080fd5b506101f46102d7366004611fe2565b61098e565b3480156102e857600080fd5b506101bc6102f7366004611e64565b6109a9565b34801561030857600080fd5b5061020961031736600461204a565b610a09565b34801561032857600080fd5b5061016561033736600461201e565b610a8f565b34801561034857600080fd5b5061018f610aba565b34801561035d57600080fd5b50610209600081565b34801561037257600080fd5b506101f4610381366004612065565b610ac9565b34801561039257600080fd5b506101f46103a13660046120a1565b610ad4565b3480156103b257600080fd5b5061018f6103c1366004611e64565b610b0c565b3480156103d257600080fd5b506102097f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561040657600080fd5b506101f461041536600461201e565b610c1c565b34801561042657600080fd5b5033600090815260086020526040902054610209565b34801561044857600080fd5b50610165610457366004612109565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061049082610c41565b8061049f575061049f82610c91565b92915050565b6060600080546104b490612133565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090612133565b801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b600061054282610cb6565b506000908152600460205260409020546001600160a01b031690565b6000610569826109a9565b9050806001600160a01b0316836001600160a01b0316036105db5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105f757506105f78133610457565b6106695760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105d2565b6106738383610d18565b505050565b6000806106858484610d86565b90506106b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610a8f565b6107075760405162461bcd60e51b815260206004820152602160248201527f5369676e617475726520696e76616c6964206f7220756e617574686f72697a656044820152601960fa1b60648201526084016105d2565b836020013534101561075b5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742066756e647320746f2072656465656d0000000060448201526064016105d2565b610766818535610df5565b6107b28435610778604087018761216d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f3792505050565b6107be81868635610fca565b6001600160a01b038116600090815260086020526040812080543492906107e69084906121ca565b90915550509235949350505050565b6107ff3382611166565b61081b5760405162461bcd60e51b81526004016105d2906121e2565b610673838383610fca565b600082815260076020526040902060010154610841816111e4565b61067383836111ee565b6001600160a01b03811633146108bb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105d2565b6108c58282611274565b5050565b6108f37f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a8f565b61094b5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f72697a6564206d696e746572732063616e20776974686044820152636472617760e01b60648201526084016105d2565b3360008181526008602052604080822080549083905590519091839183156108fc0291849190818181858888f19350505050158015610673573d6000803e3d6000fd5b61067383838360405180602001604052806000815250610ad4565b6000818152600260205260408120546001600160a01b03168061049f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b60006001600160a01b038216610a735760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d2565b506001600160a01b031660009081526003602052604090205490565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546104b490612133565b6108c53383836112db565b610ade3383611166565b610afa5760405162461bcd60e51b81526004016105d2906121e2565b610b06848484846113a9565b50505050565b6060610b1782610cb6565b60008281526006602052604081208054610b3090612133565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5c90612133565b8015610ba95780601f10610b7e57610100808354040283529160200191610ba9565b820191906000526020600020905b815481529060010190602001808311610b8c57829003601f168201915b505050505090506000610bc760408051602081019091526000815290565b90508051600003610bd9575092915050565b815115610c0b578082604051602001610bf3929190612230565b60405160208183030381529060405292505050919050565b610c14846113dc565b949350505050565b600082815260076020526040902060010154610c37816111e4565b6106738383611274565b60006001600160e01b031982166380ac58cd60e01b1480610c7257506001600160e01b03198216635b5e139f60e01b145b8061049f57506301ffc9a760e01b6001600160e01b031983161461049f565b60006001600160e01b03198216637965db0b60e01b148061049f575061049f82610c41565b6000818152600260205260409020546001600160a01b0316610d155760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d4d826109a9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d9284611450565b9050610c1483610def836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906114e1565b6001600160a01b038216610e4b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d2565b6000818152600260205260409020546001600160a01b031615610eb05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d2565b6001600160a01b0382166000908152600360205260408120805460019290610ed99084906121ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610fb25760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105d2565b600082815260066020526040902061067382826122ad565b826001600160a01b0316610fdd826109a9565b6001600160a01b0316146110415760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105d2565b6001600160a01b0382166110a35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b6110ae600082610d18565b6001600160a01b03831660009081526003602052604081208054600192906110d790849061236d565b90915550506001600160a01b03821660009081526003602052604081208054600192906111059084906121ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080611172836109a9565b9050806001600160a01b0316846001600160a01b031614806111b957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c145750836001600160a01b03166111d284610537565b6001600160a01b031614949350505050565b610d158133611505565b6111f88282610a8f565b6108c55760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790556112303390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61127e8282610a8f565b156108c55760008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b816001600160a01b0316836001600160a01b03160361133c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113b4848484610fca565b6113c084848484611569565b610b065760405162461bcd60e51b81526004016105d290612384565b60606113e782610cb6565b60006113fe60408051602081019091526000815290565b9050600081511161141e5760405180602001604052806000815250611449565b806114288461166a565b604051602001611439929190612230565b6040516020818303038152906040525b9392505050565b600061049f7f6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a8335602085013561148a604087018761216d565b6040516114989291906123d6565b6040519081900381206114c69493929160200193845260208401929092526040830152606082015260800190565b6040516020818303038152906040528051906020012061176b565b60008060006114f085856117b9565b915091506114fd81611827565b509392505050565b61150f8282610a8f565b6108c557611527816001600160a01b031660146119dd565b6115328360206119dd565b6040516020016115439291906123e6565b60408051601f198184030181529082905262461bcd60e51b82526105d291600401611e51565b60006001600160a01b0384163b1561165f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115ad90339089908890889060040161245b565b6020604051808303816000875af19250505080156115e8575060408051601f3d908101601f191682019092526115e591810190612498565b60015b611645573d808015611616576040519150601f19603f3d011682016040523d82523d6000602084013e61161b565b606091505b50805160000361163d5760405162461bcd60e51b81526004016105d290612384565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c14565b506001949350505050565b6060816000036116915750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116bb57806116a5816124b5565b91506116b49050600a836124e4565b9150611695565b60008167ffffffffffffffff8111156116d6576116d6611ec3565b6040519080825280601f01601f191660200182016040528015611700576020820181803683370190505b5090505b8415610c145761171560018361236d565b9150611722600a866124f8565b61172d9060306121ca565b60f81b8183815181106117425761174261250c565b60200101906001600160f81b031916908160001a905350611764600a866124e4565b9450611704565b600061049f611778611b79565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008082516041036117ef5760208301516040840151606085015160001a6117e387828585611ca0565b94509450505050611820565b8251604003611818576020830151604084015161180d868383611d8d565b935093505050611820565b506000905060025b9250929050565b600081600481111561183b5761183b612522565b036118435750565b600181600481111561185757611857612522565b036118a45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d2565b60028160048111156118b8576118b8612522565b036119055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d2565b600381600481111561191957611919612522565b036119715760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105d2565b600481600481111561198557611985612522565b03610d155760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105d2565b606060006119ec836002612538565b6119f79060026121ca565b67ffffffffffffffff811115611a0f57611a0f611ec3565b6040519080825280601f01601f191660200182016040528015611a39576020820181803683370190505b509050600360fc1b81600081518110611a5457611a5461250c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a8357611a8361250c565b60200101906001600160f81b031916908160001a9053506000611aa7846002612538565b611ab29060016121ca565b90505b6001811115611b2a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611ae657611ae661250c565b1a60f81b828281518110611afc57611afc61250c565b60200101906001600160f81b031916908160001a90535060049490941c93611b2381612557565b9050611ab5565b5083156114495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105d2565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611bd257507f000000000000000000000000000000000000000000000000000000000000000046145b15611bfc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611cd75750600090506003611d84565b8460ff16601b14158015611cef57508460ff16601c14155b15611d005750600090506004611d84565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d54573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d7d57600060019250925050611d84565b9150600090505b94509492505050565b6000806001600160ff1b03831681611daa60ff86901c601b6121ca565b9050611db887828885611ca0565b935093505050935093915050565b6001600160e01b031981168114610d1557600080fd5b600060208284031215611dee57600080fd5b813561144981611dc6565b60005b83811015611e14578181015183820152602001611dfc565b83811115610b065750506000910152565b60008151808452611e3d816020860160208601611df9565b601f01601f19169290920160200192915050565b6020815260006114496020830184611e25565b600060208284031215611e7657600080fd5b5035919050565b80356001600160a01b0381168114611e9457600080fd5b919050565b60008060408385031215611eac57600080fd5b611eb583611e7d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611eea57600080fd5b813567ffffffffffffffff80821115611f0557611f05611ec3565b604051601f8301601f19908116603f01168101908282118183101715611f2d57611f2d611ec3565b81604052838152866020858801011115611f4657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611f7b57600080fd5b611f8484611e7d565b9250602084013567ffffffffffffffff80821115611fa157600080fd5b9085019060608288031215611fb557600080fd5b90925060408501359080821115611fcb57600080fd5b50611fd886828701611ed9565b9150509250925092565b600080600060608486031215611ff757600080fd5b61200084611e7d565b925061200e60208501611e7d565b9150604084013590509250925092565b6000806040838503121561203157600080fd5b8235915061204160208401611e7d565b90509250929050565b60006020828403121561205c57600080fd5b61144982611e7d565b6000806040838503121561207857600080fd5b61208183611e7d565b91506020830135801515811461209657600080fd5b809150509250929050565b600080600080608085870312156120b757600080fd5b6120c085611e7d565b93506120ce60208601611e7d565b925060408501359150606085013567ffffffffffffffff8111156120f157600080fd5b6120fd87828801611ed9565b91505092959194509250565b6000806040838503121561211c57600080fd5b61212583611e7d565b915061204160208401611e7d565b600181811c9082168061214757607f821691505b60208210810361216757634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261218457600080fd5b83018035915067ffffffffffffffff82111561219f57600080fd5b60200191503681900382131561182057600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156121dd576121dd6121b4565b500190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008351612242818460208801611df9565b835190830190612256818360208801611df9565b01949350505050565b601f82111561067357600081815260208120601f850160051c810160208610156122865750805b601f850160051c820191505b818110156122a557828155600101612292565b505050505050565b815167ffffffffffffffff8111156122c7576122c7611ec3565b6122db816122d58454612133565b8461225f565b602080601f83116001811461231057600084156122f85750858301515b600019600386901b1c1916600185901b1785556122a5565b600085815260208120601f198616915b8281101561233f57888601518255948401946001909101908401612320565b508582101561235d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008282101561237f5761237f6121b4565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8183823760009101908152919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161241e816017850160208801611df9565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161244f816028840160208801611df9565b01602801949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061248e90830184611e25565b9695505050505050565b6000602082840312156124aa57600080fd5b815161144981611dc6565b6000600182016124c7576124c76121b4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826124f3576124f36124ce565b500490565b600082612507576125076124ce565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615612552576125526121b4565b500290565b600081612566576125666121b4565b50600019019056fea2646970667358221220400eb2a7221f8777b49e6320334d40b082761fa46faa26817ec0e6f933f72fba64736f6c634300080f0033",
    "deployedBytecode": "6080604052600436106101405760003560e01c80636352211e116100b6578063b88d4fde1161006f578063b88d4fde14610386578063c87b56dd146103a6578063d5391393146103c6578063d547741f146103fa578063e322ad2b1461041a578063e985e9c51461043c57600080fd5b80636352211e146102dc57806370a08231146102fc57806391d148541461031c57806395d89b411461033c578063a217fddf14610351578063a22cb4651461036657600080fd5b806323b872dd1161010857806323b872dd14610217578063248a9ca3146102375780632f2ff15d1461026757806336568abe146102875780633ccfd60b146102a757806342842e0e146102bc57600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101d45780631c098e90146101f6575b600080fd5b34801561015157600080fd5b50610165610160366004611ddc565b610485565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f6104a5565b6040516101719190611e51565b3480156101a857600080fd5b506101bc6101b7366004611e64565b610537565b6040516001600160a01b039091168152602001610171565b3480156101e057600080fd5b506101f46101ef366004611e99565b61055e565b005b610209610204366004611f66565b610678565b604051908152602001610171565b34801561022357600080fd5b506101f4610232366004611fe2565b6107f5565b34801561024357600080fd5b50610209610252366004611e64565b60009081526007602052604090206001015490565b34801561027357600080fd5b506101f461028236600461201e565b610826565b34801561029357600080fd5b506101f46102a236600461201e565b61084b565b3480156102b357600080fd5b506101f46108c9565b3480156102c857600080fd5b506101f46102d7366004611fe2565b61098e565b3480156102e857600080fd5b506101bc6102f7366004611e64565b6109a9565b34801561030857600080fd5b5061020961031736600461204a565b610a09565b34801561032857600080fd5b5061016561033736600461201e565b610a8f565b34801561034857600080fd5b5061018f610aba565b34801561035d57600080fd5b50610209600081565b34801561037257600080fd5b506101f4610381366004612065565b610ac9565b34801561039257600080fd5b506101f46103a13660046120a1565b610ad4565b3480156103b257600080fd5b5061018f6103c1366004611e64565b610b0c565b3480156103d257600080fd5b506102097f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561040657600080fd5b506101f461041536600461201e565b610c1c565b34801561042657600080fd5b5033600090815260086020526040902054610209565b34801561044857600080fd5b50610165610457366004612109565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061049082610c41565b8061049f575061049f82610c91565b92915050565b6060600080546104b490612133565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090612133565b801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b600061054282610cb6565b506000908152600460205260409020546001600160a01b031690565b6000610569826109a9565b9050806001600160a01b0316836001600160a01b0316036105db5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105f757506105f78133610457565b6106695760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105d2565b6106738383610d18565b505050565b6000806106858484610d86565b90506106b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682610a8f565b6107075760405162461bcd60e51b815260206004820152602160248201527f5369676e617475726520696e76616c6964206f7220756e617574686f72697a656044820152601960fa1b60648201526084016105d2565b836020013534101561075b5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742066756e647320746f2072656465656d0000000060448201526064016105d2565b610766818535610df5565b6107b28435610778604087018761216d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f3792505050565b6107be81868635610fca565b6001600160a01b038116600090815260086020526040812080543492906107e69084906121ca565b90915550509235949350505050565b6107ff3382611166565b61081b5760405162461bcd60e51b81526004016105d2906121e2565b610673838383610fca565b600082815260076020526040902060010154610841816111e4565b61067383836111ee565b6001600160a01b03811633146108bb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105d2565b6108c58282611274565b5050565b6108f37f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610a8f565b61094b5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920617574686f72697a6564206d696e746572732063616e20776974686044820152636472617760e01b60648201526084016105d2565b3360008181526008602052604080822080549083905590519091839183156108fc0291849190818181858888f19350505050158015610673573d6000803e3d6000fd5b61067383838360405180602001604052806000815250610ad4565b6000818152600260205260408120546001600160a01b03168061049f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b60006001600160a01b038216610a735760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d2565b506001600160a01b031660009081526003602052604090205490565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546104b490612133565b6108c53383836112db565b610ade3383611166565b610afa5760405162461bcd60e51b81526004016105d2906121e2565b610b06848484846113a9565b50505050565b6060610b1782610cb6565b60008281526006602052604081208054610b3090612133565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5c90612133565b8015610ba95780601f10610b7e57610100808354040283529160200191610ba9565b820191906000526020600020905b815481529060010190602001808311610b8c57829003601f168201915b505050505090506000610bc760408051602081019091526000815290565b90508051600003610bd9575092915050565b815115610c0b578082604051602001610bf3929190612230565b60405160208183030381529060405292505050919050565b610c14846113dc565b949350505050565b600082815260076020526040902060010154610c37816111e4565b6106738383611274565b60006001600160e01b031982166380ac58cd60e01b1480610c7257506001600160e01b03198216635b5e139f60e01b145b8061049f57506301ffc9a760e01b6001600160e01b031983161461049f565b60006001600160e01b03198216637965db0b60e01b148061049f575061049f82610c41565b6000818152600260205260409020546001600160a01b0316610d155760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d4d826109a9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d9284611450565b9050610c1483610def836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906114e1565b6001600160a01b038216610e4b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d2565b6000818152600260205260409020546001600160a01b031615610eb05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d2565b6001600160a01b0382166000908152600360205260408120805460019290610ed99084906121ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610fb25760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105d2565b600082815260066020526040902061067382826122ad565b826001600160a01b0316610fdd826109a9565b6001600160a01b0316146110415760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105d2565b6001600160a01b0382166110a35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b6110ae600082610d18565b6001600160a01b03831660009081526003602052604081208054600192906110d790849061236d565b90915550506001600160a01b03821660009081526003602052604081208054600192906111059084906121ca565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080611172836109a9565b9050806001600160a01b0316846001600160a01b031614806111b957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c145750836001600160a01b03166111d284610537565b6001600160a01b031614949350505050565b610d158133611505565b6111f88282610a8f565b6108c55760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790556112303390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61127e8282610a8f565b156108c55760008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b816001600160a01b0316836001600160a01b03160361133c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113b4848484610fca565b6113c084848484611569565b610b065760405162461bcd60e51b81526004016105d290612384565b60606113e782610cb6565b60006113fe60408051602081019091526000815290565b9050600081511161141e5760405180602001604052806000815250611449565b806114288461166a565b604051602001611439929190612230565b6040516020818303038152906040525b9392505050565b600061049f7f6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a8335602085013561148a604087018761216d565b6040516114989291906123d6565b6040519081900381206114c69493929160200193845260208401929092526040830152606082015260800190565b6040516020818303038152906040528051906020012061176b565b60008060006114f085856117b9565b915091506114fd81611827565b509392505050565b61150f8282610a8f565b6108c557611527816001600160a01b031660146119dd565b6115328360206119dd565b6040516020016115439291906123e6565b60408051601f198184030181529082905262461bcd60e51b82526105d291600401611e51565b60006001600160a01b0384163b1561165f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115ad90339089908890889060040161245b565b6020604051808303816000875af19250505080156115e8575060408051601f3d908101601f191682019092526115e591810190612498565b60015b611645573d808015611616576040519150601f19603f3d011682016040523d82523d6000602084013e61161b565b606091505b50805160000361163d5760405162461bcd60e51b81526004016105d290612384565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c14565b506001949350505050565b6060816000036116915750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116bb57806116a5816124b5565b91506116b49050600a836124e4565b9150611695565b60008167ffffffffffffffff8111156116d6576116d6611ec3565b6040519080825280601f01601f191660200182016040528015611700576020820181803683370190505b5090505b8415610c145761171560018361236d565b9150611722600a866124f8565b61172d9060306121ca565b60f81b8183815181106117425761174261250c565b60200101906001600160f81b031916908160001a905350611764600a866124e4565b9450611704565b600061049f611778611b79565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008082516041036117ef5760208301516040840151606085015160001a6117e387828585611ca0565b94509450505050611820565b8251604003611818576020830151604084015161180d868383611d8d565b935093505050611820565b506000905060025b9250929050565b600081600481111561183b5761183b612522565b036118435750565b600181600481111561185757611857612522565b036118a45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d2565b60028160048111156118b8576118b8612522565b036119055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d2565b600381600481111561191957611919612522565b036119715760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105d2565b600481600481111561198557611985612522565b03610d155760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105d2565b606060006119ec836002612538565b6119f79060026121ca565b67ffffffffffffffff811115611a0f57611a0f611ec3565b6040519080825280601f01601f191660200182016040528015611a39576020820181803683370190505b509050600360fc1b81600081518110611a5457611a5461250c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a8357611a8361250c565b60200101906001600160f81b031916908160001a9053506000611aa7846002612538565b611ab29060016121ca565b90505b6001811115611b2a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611ae657611ae661250c565b1a60f81b828281518110611afc57611afc61250c565b60200101906001600160f81b031916908160001a90535060049490941c93611b2381612557565b9050611ab5565b5083156114495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105d2565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611bd257507f000000000000000000000000000000000000000000000000000000000000000046145b15611bfc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611cd75750600090506003611d84565b8460ff16601b14158015611cef57508460ff16601c14155b15611d005750600090506004611d84565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d54573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d7d57600060019250925050611d84565b9150600090505b94509492505050565b6000806001600160ff1b03831681611daa60ff86901c601b6121ca565b9050611db887828885611ca0565b935093505050935093915050565b6001600160e01b031981168114610d1557600080fd5b600060208284031215611dee57600080fd5b813561144981611dc6565b60005b83811015611e14578181015183820152602001611dfc565b83811115610b065750506000910152565b60008151808452611e3d816020860160208601611df9565b601f01601f19169290920160200192915050565b6020815260006114496020830184611e25565b600060208284031215611e7657600080fd5b5035919050565b80356001600160a01b0381168114611e9457600080fd5b919050565b60008060408385031215611eac57600080fd5b611eb583611e7d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611eea57600080fd5b813567ffffffffffffffff80821115611f0557611f05611ec3565b604051601f8301601f19908116603f01168101908282118183101715611f2d57611f2d611ec3565b81604052838152866020858801011115611f4657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611f7b57600080fd5b611f8484611e7d565b9250602084013567ffffffffffffffff80821115611fa157600080fd5b9085019060608288031215611fb557600080fd5b90925060408501359080821115611fcb57600080fd5b50611fd886828701611ed9565b9150509250925092565b600080600060608486031215611ff757600080fd5b61200084611e7d565b925061200e60208501611e7d565b9150604084013590509250925092565b6000806040838503121561203157600080fd5b8235915061204160208401611e7d565b90509250929050565b60006020828403121561205c57600080fd5b61144982611e7d565b6000806040838503121561207857600080fd5b61208183611e7d565b91506020830135801515811461209657600080fd5b809150509250929050565b600080600080608085870312156120b757600080fd5b6120c085611e7d565b93506120ce60208601611e7d565b925060408501359150606085013567ffffffffffffffff8111156120f157600080fd5b6120fd87828801611ed9565b91505092959194509250565b6000806040838503121561211c57600080fd5b61212583611e7d565b915061204160208401611e7d565b600181811c9082168061214757607f821691505b60208210810361216757634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261218457600080fd5b83018035915067ffffffffffffffff82111561219f57600080fd5b60200191503681900382131561182057600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156121dd576121dd6121b4565b500190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008351612242818460208801611df9565b835190830190612256818360208801611df9565b01949350505050565b601f82111561067357600081815260208120601f850160051c810160208610156122865750805b601f850160051c820191505b818110156122a557828155600101612292565b505050505050565b815167ffffffffffffffff8111156122c7576122c7611ec3565b6122db816122d58454612133565b8461225f565b602080601f83116001811461231057600084156122f85750858301515b600019600386901b1c1916600185901b1785556122a5565b600085815260208120601f198616915b8281101561233f57888601518255948401946001909101908401612320565b508582101561235d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008282101561237f5761237f6121b4565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8183823760009101908152919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161241e816017850160208801611df9565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161244f816028840160208801611df9565b01602801949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061248e90830184611e25565b9695505050505050565b6000602082840312156124aa57600080fd5b815161144981611dc6565b6000600182016124c7576124c76121b4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826124f3576124f36124ce565b500490565b600082612507576125076124ce565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615612552576125526121b4565b500290565b600081612566576125666121b4565b50600019019056fea2646970667358221220400eb2a7221f8777b49e6320334d40b082761fa46faa26817ec0e6f933f72fba64736f6c634300080f0033",
    "sourceMap": "702:4673:0:-:0;;;917:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:12;;;;;;;;;;;;;-1:-1:-1;;;2455:602:12;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:12;;;1390:113:3;;;;;;;;;;;;;-1:-1:-1;;;1390:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:3;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:3;:17;1489:7;1479;:17;:::i;:::-;-1:-1:-1;;2541:22:12;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:12;;2651:117;3633:73;;;3297:25:16;;;3338:18;;;3331:34;;;;-1:-1:-1;3381:18:16;;3374:34;;;;3424:18;;;;3417:34;;;;3700:4:12;3467:19:16;;;3460:61;;;3633:73:12;;;;;;;;;;3269:19:16;;;;3633:73:12;;;3623:84;;;;;;;2896:85;;2991:28;;;;3029:21;;-1:-1:-1;1039:31:0::2;833:24;1063:6:::0;1039:10:::2;:31::i;:::-;917:160:::0;702:4673;;6824:110:1;6902:25;6913:4;6919:7;6902:10;:25::i;:::-;6824:110;;:::o;7474:233::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:1;;;;;;;;;;;;7552:149;;7595:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7595:29:1;;;;;;;;;:36;;-1:-1:-1;;7595:36:1;7627:4;7595:36;;;7677:12;719:10:9;;640:96;7677:12:1;-1:-1:-1;;;;;7650:40:1;7668:7;-1:-1:-1;;;;;7650:40:1;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;14:298:16:-;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:16;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:16:o;317:127::-;378:10;373:3;369:20;366:1;359:31;409:4;406:1;399:15;433:4;430:1;423:15;449:380;528:1;524:12;;;;571;;;592:61;;646:4;638:6;634:17;624:27;;592:61;699:2;691:6;688:14;668:18;665:38;662:161;;745:10;740:3;736:20;733:1;726:31;780:4;777:1;770:15;808:4;805:1;798:15;662:161;;449:380;;;:::o;960:545::-;1062:2;1057:3;1054:11;1051:448;;;1098:1;1123:5;1119:2;1112:17;1168:4;1164:2;1154:19;1238:2;1226:10;1222:19;1219:1;1215:27;1209:4;1205:38;1274:4;1262:10;1259:20;1256:47;;;-1:-1:-1;1297:4:16;1256:47;1352:2;1347:3;1343:12;1340:1;1336:20;1330:4;1326:31;1316:41;;1407:82;1425:2;1418:5;1415:13;1407:82;;;1470:17;;;1451:1;1440:13;1407:82;;;1411:3;;;1051:448;960:545;;;:::o;1681:1352::-;1801:10;;-1:-1:-1;;;;;1823:30:16;;1820:56;;;1856:18;;:::i;:::-;1885:97;1975:6;1935:38;1967:4;1961:11;1935:38;:::i;:::-;1929:4;1885:97;:::i;:::-;2037:4;;2101:2;2090:14;;2118:1;2113:663;;;;2820:1;2837:6;2834:89;;;-1:-1:-1;2889:19:16;;;2883:26;2834:89;-1:-1:-1;;1638:1:16;1634:11;;;1630:24;1626:29;1616:40;1662:1;1658:11;;;1613:57;2936:81;;2083:944;;2113:663;907:1;900:14;;;944:4;931:18;;-1:-1:-1;;2149:20:16;;;2267:236;2281:7;2278:1;2275:14;2267:236;;;2370:19;;;2364:26;2349:42;;2462:27;;;;2430:1;2418:14;;;;2297:19;;2267:236;;;2271:3;2531:6;2522:7;2519:19;2516:201;;;2592:19;;;2586:26;-1:-1:-1;;2675:1:16;2671:14;;;2687:3;2667:24;2663:37;2659:42;2644:58;2629:74;;2516:201;-1:-1:-1;;;;;2763:1:16;2747:14;;;2743:22;2730:36;;-1:-1:-1;1681:1352:16:o;3038:489::-;702:4673:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "702:4673:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5082:291;;;;;;;;;;-1:-1:-1;5082:291:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;5082:291:0;;;;;;;;2470:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;;;;;-1:-1:-1;3935:167:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;3935:167:3;1528:203:16;3467:407:3;;;;;;;;;;-1:-1:-1;3467:407:3;;;;;:::i;:::-;;:::i;:::-;;2043:1047:0;;;;;;:::i;:::-;;:::i;:::-;;;3859:25:16;;;3847:2;3832:18;2043:1047:0;3713:177:16;4612:327:3;;;;;;;;;;-1:-1:-1;4612:327:3;;;;;:::i;:::-;;:::i;4391:129:1:-;;;;;;;;;;-1:-1:-1;4391:129:1;;;;;:::i;:::-;4465:7;4491:12;;;:6;:12;;;;;:22;;;;4391:129;4816:145;;;;;;;;;;-1:-1:-1;4816:145:1;;;;;:::i;:::-;;:::i;5925:214::-;;;;;;;;;;-1:-1:-1;5925:214:1;;;;;:::i;:::-;;:::i;3096:551:0:-;;;;;;;;;;;;;:::i;5005:179:3:-;;;;;;;;;;-1:-1:-1;5005:179:3;;;;;:::i;:::-;;:::i;2190:218::-;;;;;;;;;;-1:-1:-1;2190:218:3;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;;;;;-1:-1:-1;1929:204:3;;;;;:::i;:::-;;:::i;2895:145:1:-;;;;;;;;;;-1:-1:-1;2895:145:1;;;;;:::i;:::-;;:::i;2632:102:3:-;;;;;;;;;;;;;:::i;2027:49:1:-;;;;;;;;;;-1:-1:-1;2027:49:1;2072:4;2027:49;;4169:153:3;;;;;;;;;;-1:-1:-1;4169:153:3;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;;;;;-1:-1:-1;5250:315:3;;;;;:::i;:::-;;:::i;482:608:6:-;;;;;;;;;;-1:-1:-1;482:608:6;;;;;:::i;:::-;;:::i;795:62:0:-;;;;;;;;;;;;833:24;795:62;;5241:147:1;;;;;;;;;;-1:-1:-1;5241:147:1;;;;;:::i;:::-;;:::i;3653:115:0:-;;;;;;;;;;-1:-1:-1;3750:10:0;3705:7;3731:30;;;:18;:30;;;;;;3653:115;;4388:162:3;;;;;;;;;;-1:-1:-1;4388:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:3;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;5082:291:0;5230:4;5269:37;5294:11;5269:24;:37::i;:::-;:97;;;;5322:44;5354:11;5322:31;:44::i;:::-;5250:116;5082:291;-1:-1:-1;;5082:291:0:o;2470:98:3:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:3;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:3;:2;-1:-1:-1;;;;;3604:11:3;;3596:57;;;;-1:-1:-1;;;3596:57:3;;6791:2:16;3596:57:3;;;6773:21:16;6830:2;6810:18;;;6803:30;6869:34;6849:18;;;6842:62;-1:-1:-1;;;6920:18:16;;;6913:31;6961:19;;3596:57:3;;;;;;;;;719:10:9;-1:-1:-1;;;;;3685:21:3;;;;:62;;-1:-1:-1;3710:37:3;3727:5;719:10:9;4388:162:3;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:3;;7193:2:16;3664:171:3;;;7175:21:16;7232:2;7212:18;;;7205:30;7271:34;7251:18;;;7244:62;7342:32;7322:18;;;7315:60;7392:19;;3664:171:3;6991:426:16;3664:171:3;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;2043:1047:0:-;2184:7;2277:14;2294:27;2302:7;2311:9;2294:7;:27::i;:::-;2277:44;;2417:28;833:24;2438:6;2417:7;:28::i;:::-;2396:108;;;;-1:-1:-1;;;2396:108:0;;7624:2:16;2396:108:0;;;7606:21:16;7663:2;7643:18;;;7636:30;7702:34;7682:18;;;7675:62;-1:-1:-1;;;7753:18:16;;;7746:31;7794:19;;2396:108:0;7422:397:16;2396:108:0;2618:7;:16;;;2605:9;:29;;2597:70;;;;-1:-1:-1;;;2597:70:0;;8026:2:16;2597:70:0;;;8008:21:16;8065:2;8045:18;;;8038:30;8104;8084:18;;;8077:58;8152:18;;2597:70:0;7824:352:16;2597:70:0;2760:30;2766:6;2774:15;;2760:5;:30::i;:::-;2800:42;2813:15;;2830:11;;;;2813:7;2830:11;:::i;:::-;2800:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2800:12:0;;-1:-1:-1;;;2800:42:0:i;:::-;2899:44;2909:6;2917:8;2927:15;;2899:9;:44::i;:::-;-1:-1:-1;;;;;3011:26:0;;;;;;:18;:26;;;;;:39;;3041:9;;3011:26;:39;;3041:9;;3011:39;:::i;:::-;;;;-1:-1:-1;;3068:15:0;;;2043:1047;-1:-1:-1;;;;2043:1047:0:o;4612:327:3:-;4801:41;719:10:9;4834:7:3;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:3;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;4816:145:1:-;4465:7;4491:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;5925:214::-:0;-1:-1:-1;;;;;6020:23:1;;719:10:9;6020:23:1;6012:83;;;;-1:-1:-1;;;6012:83:1;;9590:2:16;6012:83:1;;;9572:21:16;9629:2;9609:18;;;9602:30;9668:34;9648:18;;;9641:62;-1:-1:-1;;;9719:18:16;;;9712:45;9774:19;;6012:83:1;9388:411:16;6012:83:1;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;3096:551:0:-;3154:32;833:24;3175:10;3154:7;:32::i;:::-;3133:115;;;;-1:-1:-1;;;3133:115:0;;10006:2:16;3133:115:0;;;9988:21:16;10045:2;10025:18;;;10018:30;10084:34;10064:18;;;10057:62;-1:-1:-1;;;10135:18:16;;;10128:34;10179:19;;3133:115:0;9804:400:16;3133:115:0;3426:10;3391:24;3465:28;;;:18;:28;;;;;;;;3573:32;;;;3615:25;;3465:28;;3426:10;;3615:25;;;;;3465:28;;3615:25;;3391:24;3615:25;3465:28;3426:10;3615:25;;;;;;;;;;;;;;;;;;;5005:179:3;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;2190:218::-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:3;;2323:56;;;;-1:-1:-1;;;2323:56:3;;10411:2:16;2323:56:3;;;10393:21:16;10450:2;10430:18;;;10423:30;-1:-1:-1;;;10469:18:16;;;10462:54;10533:18;;2323:56:3;10209:348:16;1929:204:3;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:73;;;;-1:-1:-1;;;2020:73:3;;10764:2:16;2020:73:3;;;10746:21:16;10803:2;10783:18;;;10776:30;10842:34;10822:18;;;10815:62;-1:-1:-1;;;10893:18:16;;;10886:39;10942:19;;2020:73:3;10562:405:16;2020:73:3;-1:-1:-1;;;;;;2110:16:3;;;;;:9;:16;;;;;;;1929:204::o;2895:145:1:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:1;;;;;;;;;;;;;;;2895:145::o;2632:102:3:-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:9;4296:8:3;4306;4263:18;:52::i;5250:315::-;5418:41;719:10:9;5451:7:3;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:3;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;482:608:6:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:19;;;:10;:19;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;3394:9:3;;;;;;;;;-1:-1:-1;3394:9:3;;;3318:92;690:10:6;669:31;;779:4;773:18;795:1;773:23;769:70;;-1:-1:-1;819:9:6;482:608;-1:-1:-1;;482:608:6:o;769:70::-;941:23;;:27;937:106;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;482:608;;;:::o;937:106::-;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;482:608;-1:-1:-1;;;;482:608:6:o;5241:147:1:-;4465:7;4491:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;1570:300:3:-:0;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1827:36:3;829:155:13;2606:202:1;2691:4;-1:-1:-1;;;;;;2714:47:1;;-1:-1:-1;;;2714:47:1;;:87;;;2765:36;2789:11;2765:23;:36::i;11657:133:3:-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:3;11730:53;;;;-1:-1:-1;;;11730:53:3;;10411:2:16;11730:53:3;;;10393:21:16;10450:2;10430:18;;;10423:30;-1:-1:-1;;;10469:18:16;;;10462:54;10533:18;;11730:53:3;10209:348:16;11730:53:3;11657:133;:::o;10959:171::-;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:3;-1:-1:-1;;;;;11033:29:3;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:3;;;;;;;;;;;10959:171;;:::o;4831:245:0:-;4948:7;4971:14;4988;4994:7;4988:5;:14::i;:::-;4971:31;;5019:50;5059:9;5019:31;:6;8305:58:11;;17412:66:16;8305:58:11;;;17400:79:16;17495:12;;;17488:28;;;8175:7:11;;17532:12:16;;8305:58:11;;;;;;;;;;;;8295:69;;;;;;8288:76;;8106:265;;;;5019:31:0;:39;;:50::i;8868:427:3:-;-1:-1:-1;;;;;8947:16:3;;8939:61;;;;-1:-1:-1;;;8939:61:3;;11649:2:16;8939:61:3;;;11631:21:16;;;11668:18;;;11661:30;11727:34;11707:18;;;11700:62;11779:18;;8939:61:3;11447:356:16;8939:61:3;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:3;:30;9010:58;;;;-1:-1:-1;;;9010:58:3;;12010:2:16;9010:58:3;;;11992:21:16;12049:2;12029:18;;;12022:30;12088;12068:18;;;12061:58;12136:18;;9010:58:3;11808:352:16;9010:58:3;-1:-1:-1;;;;;9135:13:3;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:3;-1:-1:-1;;;;;9163:21:3;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;5925:214:1;;:::o;1237::6:-;7099:4:3;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:3;1328:75:6;;;;-1:-1:-1;;;1328:75:6;;12367:2:16;1328:75:6;;;12349:21:16;12406:2;12386:18;;;12379:30;12445:34;12425:18;;;12418:62;-1:-1:-1;;;12496:18:16;;;12489:44;12550:19;;1328:75:6;12165:410:16;1328:75:6;1413:19;;;;:10;:19;;;;;:31;1435:9;1413:19;:31;:::i;10242:605:3:-;10396:4;-1:-1:-1;;;;;10369:31:3;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:3;;10361:81;;;;-1:-1:-1;;;10361:81:3;;14986:2:16;10361:81:3;;;14968:21:16;15025:2;15005:18;;;14998:30;15064:34;15044:18;;;15037:62;-1:-1:-1;;;15115:18:16;;;15108:35;15160:19;;10361:81:3;14784:401:16;10361:81:3;-1:-1:-1;;;;;10460:16:3;;10452:65;;;;-1:-1:-1;;;10452:65:3;;15392:2:16;10452:65:3;;;15374:21:16;15431:2;15411:18;;;15404:30;15470:34;15450:18;;;15443:62;-1:-1:-1;;;15521:18:16;;;15514:34;15565:19;;10452:65:3;15190:400:16;10452:65:3;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:3;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:3;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:3;-1:-1:-1;;;;;10727:21:3;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:3;:7;-1:-1:-1;;;;;7483:16:3;;:52;;;-1:-1:-1;;;;;;4508:25:3;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:3;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:3;;;7317:261;-1:-1:-1;;;;7317:261:3:o;3334:103:1:-;3400:30;3411:4;719:10:9;3400::1;:30::i;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7595:29:1;;;;;;;;;:36;;-1:-1:-1;;7595:36:1;7627:4;7595:36;;;7677:12;719:10:9;;640:96;7677:12:1;-1:-1:-1;;;;;7650:40:1;7668:7;-1:-1:-1;;;;;7650:40:1;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7999:29:1;;;;;;;;;;:37;;-1:-1:-1;;7999:37:1;;;8055:40;719:10:9;;7999:12:1;;8055:40;;8031:5;8055:40;7878:234;;:::o;11266:307:3:-;11416:8;-1:-1:-1;;;;;11407:17:3;:5;-1:-1:-1;;;;;11407:17:3;;11399:55;;;;-1:-1:-1;;;11399:55:3;;15927:2:16;11399:55:3;;;15909:21:16;15966:2;15946:18;;;15939:30;16005:27;15985:18;;;15978:55;16050:18;;11399:55:3;15725:349:16;11399:55:3;-1:-1:-1;;;;;11464:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:3;;;;;;;;;;11525:41;;540::16;;;11525::3;;513:18:16;11525:41:3;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:3;;;;;;;:::i;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;3394:9;;;;;;;;;-1:-1:-1;3394:9:3;;;3318:92;2956:10;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;2800:276;-1:-1:-1;;;2800:276:3:o;3924:555:0:-;4015:7;4057:415;4158:122;4306:15;;4347:16;;;;4405:11;;;;4306:7;4405:11;:::i;:::-;4389:29;;;;;;;:::i;:::-;;;;;;;;;4122:318;;;;;;;17005:25:16;;;17061:2;17046:18;;17039:34;;;;17104:2;17089:18;;17082:34;17147:2;17132:18;;17125:34;16992:3;16977:19;;16774:391;4122:318:0;;;;;;;;;;;;;4091:367;;;;;;4057:16;:415::i;4402:227:11:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;:::-;-1:-1:-1;4613:9:11;4402:227;-1:-1:-1;;;4402:227:11:o;3718:492:1:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:1;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:1;;;;;;;;;;-1:-1:-1;;;3844:349:1;;;;;;;:::i;12342:831:3:-;12491:4;-1:-1:-1;;;;;12511:13:3;;1465:19:8;:23;12507:660:3;;12546:71;;-1:-1:-1;;;12546:71:3;;-1:-1:-1;;;;;12546:36:3;;;;;:71;;719:10:9;;12597:4:3;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:3;;;;;;;;-1:-1:-1;;12546:71:3;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:3;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:3;-1:-1:-1;;;12667:51:3;;-1:-1:-1;12660:58:3;;12507:660;-1:-1:-1;13152:4:3;12342:831;;;;;;:::o;392:703:10:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:10;;;;;;;;;;;;-1:-1:-1;;;691:10:10;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:10;;-1:-1:-1;837:2:10;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:10;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:10;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:10;;;;;;;;-1:-1:-1;1036:11:10;1045:2;1036:11;;:::i;:::-;;;908:150;;4339:165:12;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9320:57:11;;-1:-1:-1;;;9320:57:11;;;22324:27:16;22367:11;;;22360:27;;;22403:12;;;22396:28;;;9284:7:11;;22440:12:16;;9320:57:11;;;;;;;;;;;;9310:68;;;;;;9303:75;;9191:194;;;;;2243:1373;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:11;;-1:-1:-1;3563:35:11;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:11;;20074:2:16;766:34:11;;;20056:21:16;20113:2;20093:18;;;20086:30;20152:26;20132:18;;;20125:54;20196:18;;766:34:11;19872:348:16;708:465:11;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:11;;20427:2:16;881:41:11;;;20409:21:16;20466:2;20446:18;;;20439:30;20505:33;20485:18;;;20478:61;20556:18;;881:41:11;20225:355:16;817:356:11;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:11;;20787:2:16;998:44:11;;;20769:21:16;20826:2;20806:18;;;20799:30;20865:34;20845:18;;;20838:62;-1:-1:-1;;;20916:18:16;;;20909:32;20958:19;;998:44:11;20585:398:16;939:234:11;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:11;;21190:2:16;1118:44:11;;;21172:21:16;21229:2;21209:18;;;21202:30;21268:34;21248:18;;;21241:62;-1:-1:-1;;;21319:18:16;;;21312:32;21361:19;;1118:44:11;20988:398:16;1652:441:10;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:10;;1752:47;;-1:-1:-1;;;1809:6:10;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:10;;;;;;;;;-1:-1:-1;;;1834:6:10;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:10;;;;;;;;-1:-1:-1;1864:9:10;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:10;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:10;;;;;;;;-1:-1:-1;1979:1:10;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:10;;2000:55;;;;-1:-1:-1;;;2000:55:10;;21907:2:16;2000:55:10;;;21889:21:16;;;21926:18;;;21919:30;21985:34;21965:18;;;21958:62;22037:18;;2000:55:10;21705:356:16;3143:308:12;3196:7;3227:4;-1:-1:-1;;;;;3236:12:12;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:12;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:12;;;3392:10;3633:73;;;;23125:25:16;;;;3404:12:12;23166:18:16;;;23159:34;3418:15:12;23209:18:16;;;23202:34;3677:13:12;23252:18:16;;;23245:34;3700:4:12;23295:19:16;;;;23288:61;;;;3633:73:12;;;;;;;;;;23097:19:16;;;;3633:73:12;;;3623:84;;;;;;3143:308::o;5810:1603:11:-;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:11;;-1:-1:-1;6962:30:11;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:11;;-1:-1:-1;7071:30:11;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;22690:25:16;;;22763:4;22751:17;;22731:18;;;22724:45;;;;22785:18;;;22778:34;;;22828:18;;;22821:34;;;7224:24:11;;22662:19:16;;7224:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:11;;-1:-1:-1;;7224:24:11;;;-1:-1:-1;;;;;;;7262:20:11;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:11;;-1:-1:-1;5810:1603:11;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:11;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;14:131:16:-;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:16;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:16;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:16:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:16;;1343:180;-1:-1:-1;1343:180:16:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:16;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:16:o;2173:127::-;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:718;2347:5;2400:3;2393:4;2385:6;2381:17;2377:27;2367:55;;2418:1;2415;2408:12;2367:55;2454:6;2441:20;2480:18;2517:2;2513;2510:10;2507:36;;;2523:18;;:::i;:::-;2598:2;2592:9;2566:2;2652:13;;-1:-1:-1;;2648:22:16;;;2672:2;2644:31;2640:40;2628:53;;;2696:18;;;2716:22;;;2693:46;2690:72;;;2742:18;;:::i;:::-;2782:10;2778:2;2771:22;2817:2;2809:6;2802:18;2863:3;2856:4;2851:2;2843:6;2839:15;2835:26;2832:35;2829:55;;;2880:1;2877;2870:12;2829:55;2944:2;2937:4;2929:6;2925:17;2918:4;2910:6;2906:17;2893:54;2991:1;2984:4;2979:2;2971:6;2967:15;2963:26;2956:37;3011:6;3002:15;;;;;;2305:718;;;;:::o;3028:680::-;3142:6;3150;3158;3211:2;3199:9;3190:7;3186:23;3182:32;3179:52;;;3227:1;3224;3217:12;3179:52;3250:29;3269:9;3250:29;:::i;:::-;3240:39;;3330:2;3319:9;3315:18;3302:32;3353:18;3394:2;3386:6;3383:14;3380:34;;;3410:1;3407;3400:12;3380:34;3433:22;;;;3489:2;3471:16;;;3467:25;3464:45;;;3505:1;3502;3495:12;3464:45;3528:2;;-1:-1:-1;3583:2:16;3568:18;;3555:32;;3599:16;;;3596:36;;;3628:1;3625;3618:12;3596:36;;3651:51;3694:7;3683:8;3672:9;3668:24;3651:51;:::i;:::-;3641:61;;;3028:680;;;;;:::o;3895:328::-;3972:6;3980;3988;4041:2;4029:9;4020:7;4016:23;4012:32;4009:52;;;4057:1;4054;4047:12;4009:52;4080:29;4099:9;4080:29;:::i;:::-;4070:39;;4128:38;4162:2;4151:9;4147:18;4128:38;:::i;:::-;4118:48;;4213:2;4202:9;4198:18;4185:32;4175:42;;3895:328;;;;;:::o;4595:254::-;4663:6;4671;4724:2;4712:9;4703:7;4699:23;4695:32;4692:52;;;4740:1;4737;4730:12;4692:52;4776:9;4763:23;4753:33;;4805:38;4839:2;4828:9;4824:18;4805:38;:::i;:::-;4795:48;;4595:254;;;;;:::o;4854:186::-;4913:6;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5005:29;5024:9;5005:29;:::i;5045:347::-;5110:6;5118;5171:2;5159:9;5150:7;5146:23;5142:32;5139:52;;;5187:1;5184;5177:12;5139:52;5210:29;5229:9;5210:29;:::i;:::-;5200:39;;5289:2;5278:9;5274:18;5261:32;5336:5;5329:13;5322:21;5315:5;5312:32;5302:60;;5358:1;5355;5348:12;5302:60;5381:5;5371:15;;;5045:347;;;;;:::o;5397:537::-;5492:6;5500;5508;5516;5569:3;5557:9;5548:7;5544:23;5540:33;5537:53;;;5586:1;5583;5576:12;5537:53;5609:29;5628:9;5609:29;:::i;:::-;5599:39;;5657:38;5691:2;5680:9;5676:18;5657:38;:::i;:::-;5647:48;;5742:2;5731:9;5727:18;5714:32;5704:42;;5797:2;5786:9;5782:18;5769:32;5824:18;5816:6;5813:30;5810:50;;;5856:1;5853;5846:12;5810:50;5879:49;5920:7;5911:6;5900:9;5896:22;5879:49;:::i;:::-;5869:59;;;5397:537;;;;;;;:::o;5939:260::-;6007:6;6015;6068:2;6056:9;6047:7;6043:23;6039:32;6036:52;;;6084:1;6081;6074:12;6036:52;6107:29;6126:9;6107:29;:::i;:::-;6097:39;;6155:38;6189:2;6178:9;6174:18;6155:38;:::i;6204:380::-;6283:1;6279:12;;;;6326;;;6347:61;;6401:4;6393:6;6389:17;6379:27;;6347:61;6454:2;6446:6;6443:14;6423:18;6420:38;6417:161;;6500:10;6495:3;6491:20;6488:1;6481:31;6535:4;6532:1;6525:15;6563:4;6560:1;6553:15;6417:161;;6204:380;;;:::o;8181:522::-;8259:4;8265:6;8325:11;8312:25;8419:2;8415:7;8404:8;8388:14;8384:29;8380:43;8360:18;8356:68;8346:96;;8438:1;8435;8428:12;8346:96;8465:33;;8517:20;;;-1:-1:-1;8560:18:16;8549:30;;8546:50;;;8592:1;8589;8582:12;8546:50;8625:4;8613:17;;-1:-1:-1;8656:14:16;8652:27;;;8642:38;;8639:58;;;8693:1;8690;8683:12;8708:127;8769:10;8764:3;8760:20;8757:1;8750:31;8800:4;8797:1;8790:15;8824:4;8821:1;8814:15;8840:128;8880:3;8911:1;8907:6;8904:1;8901:13;8898:39;;;8917:18;;:::i;:::-;-1:-1:-1;8953:9:16;;8840:128::o;8973:410::-;9175:2;9157:21;;;9214:2;9194:18;;;9187:30;9253:34;9248:2;9233:18;;9226:62;-1:-1:-1;;;9319:2:16;9304:18;;9297:44;9373:3;9358:19;;8973:410::o;10972:470::-;11151:3;11189:6;11183:13;11205:53;11251:6;11246:3;11239:4;11231:6;11227:17;11205:53;:::i;:::-;11321:13;;11280:16;;;;11343:57;11321:13;11280:16;11377:4;11365:17;;11343:57;:::i;:::-;11416:20;;10972:470;-1:-1:-1;;;;10972:470:16:o;12706:545::-;12808:2;12803:3;12800:11;12797:448;;;12844:1;12869:5;12865:2;12858:17;12914:4;12910:2;12900:19;12984:2;12972:10;12968:19;12965:1;12961:27;12955:4;12951:38;13020:4;13008:10;13005:20;13002:47;;;-1:-1:-1;13043:4:16;13002:47;13098:2;13093:3;13089:12;13086:1;13082:20;13076:4;13072:31;13062:41;;13153:82;13171:2;13164:5;13161:13;13153:82;;;13216:17;;;13197:1;13186:13;13153:82;;;13157:3;;;12706:545;;;:::o;13427:1352::-;13553:3;13547:10;13580:18;13572:6;13569:30;13566:56;;;13602:18;;:::i;:::-;13631:97;13721:6;13681:38;13713:4;13707:11;13681:38;:::i;:::-;13675:4;13631:97;:::i;:::-;13783:4;;13847:2;13836:14;;13864:1;13859:663;;;;14566:1;14583:6;14580:89;;;-1:-1:-1;14635:19:16;;;14629:26;14580:89;-1:-1:-1;;13384:1:16;13380:11;;;13376:24;13372:29;13362:40;13408:1;13404:11;;;13359:57;14682:81;;13829:944;;13859:663;12653:1;12646:14;;;12690:4;12677:18;;-1:-1:-1;;13895:20:16;;;14013:236;14027:7;14024:1;14021:14;14013:236;;;14116:19;;;14110:26;14095:42;;14208:27;;;;14176:1;14164:14;;;;14043:19;;14013:236;;;14017:3;14277:6;14268:7;14265:19;14262:201;;;14338:19;;;14332:26;-1:-1:-1;;14421:1:16;14417:14;;;14433:3;14413:24;14409:37;14405:42;14390:58;14375:74;;14262:201;-1:-1:-1;;;;;14509:1:16;14493:14;;;14489:22;14476:36;;-1:-1:-1;13427:1352:16:o;15595:125::-;15635:4;15663:1;15660;15657:8;15654:34;;;15668:18;;:::i;:::-;-1:-1:-1;15705:9:16;;15595:125::o;16079:414::-;16281:2;16263:21;;;16320:2;16300:18;;;16293:30;16359:34;16354:2;16339:18;;16332:62;-1:-1:-1;;;16425:2:16;16410:18;;16403:48;16483:3;16468:19;;16079:414::o;16498:271::-;16681:6;16673;16668:3;16655:33;16637:3;16707:16;;16732:13;;;16707:16;16498:271;-1:-1:-1;16498:271:16:o;17555:786::-;17966:25;17961:3;17954:38;17936:3;18021:6;18015:13;18037:62;18092:6;18087:2;18082:3;18078:12;18071:4;18063:6;18059:17;18037:62;:::i;:::-;-1:-1:-1;;;18158:2:16;18118:16;;;18150:11;;;18143:40;18208:13;;18230:63;18208:13;18279:2;18271:11;;18264:4;18252:17;;18230:63;:::i;:::-;18313:17;18332:2;18309:26;;17555:786;-1:-1:-1;;;;17555:786:16:o;18346:489::-;-1:-1:-1;;;;;18615:15:16;;;18597:34;;18667:15;;18662:2;18647:18;;18640:43;18714:2;18699:18;;18692:34;;;18762:3;18757:2;18742:18;;18735:31;;;18540:4;;18783:46;;18809:19;;18801:6;18783:46;:::i;:::-;18775:54;18346:489;-1:-1:-1;;;;;;18346:489:16:o;18840:249::-;18909:6;18962:2;18950:9;18941:7;18937:23;18933:32;18930:52;;;18978:1;18975;18968:12;18930:52;19010:9;19004:16;19029:30;19053:5;19029:30;:::i;19094:135::-;19133:3;19154:17;;;19151:43;;19174:18;;:::i;:::-;-1:-1:-1;19221:1:16;19210:13;;19094:135::o;19234:127::-;19295:10;19290:3;19286:20;19283:1;19276:31;19326:4;19323:1;19316:15;19350:4;19347:1;19340:15;19366:120;19406:1;19432;19422:35;;19437:18;;:::i;:::-;-1:-1:-1;19471:9:16;;19366:120::o;19491:112::-;19523:1;19549;19539:35;;19554:18;;:::i;:::-;-1:-1:-1;19588:9:16;;19491:112::o;19608:127::-;19669:10;19664:3;19660:20;19657:1;19650:31;19700:4;19697:1;19690:15;19724:4;19721:1;19714:15;19740:127;19801:10;19796:3;19792:20;19789:1;19782:31;19832:4;19829:1;19822:15;19856:4;19853:1;19846:15;21391:168;21431:7;21497:1;21493;21489:6;21485:14;21482:1;21479:21;21474:1;21467:9;21460:17;21456:45;21453:71;;;21504:18;;:::i;:::-;-1:-1:-1;21544:9:16;;21391:168::o;21564:136::-;21603:3;21631:5;21621:39;;21640:18;;:::i;:::-;-1:-1:-1;;;21676:18:16;;21564:136::o",
    "sourcePath": "/home/abc/Swati/LazyMinting/contracts/Lazy.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.15+commit.e14f2714"
    },
    "ast": {
        "absolutePath": "/home/abc/Swati/LazyMinting/contracts/Lazy.sol",
        "exportedSymbols": {
            "AccessControl": [
                572
            ],
            "Address": [
                2093
            ],
            "Context": [
                2115
            ],
            "ECDSA": [
                2748
            ],
            "EIP712": [
                2902
            ],
            "ERC165": [
                2926
            ],
            "ERC721": [
                1512
            ],
            "ERC721URIStorage": [
                1771
            ],
            "IAccessControl": [
                645
            ],
            "IERC165": [
                2938
            ],
            "IERC721": [
                1628
            ],
            "IERC721Metadata": [
                1798
            ],
            "IERC721Receiver": [
                1646
            ],
            "Lazy": [
                252
            ],
            "Strings": [
                2341
            ],
            "console": [
                11002
            ]
        },
        "id": 253,
        "license": "Unlicense",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "37:23:0"
            },
            {
                "id": 2,
                "literals": [
                    "experimental",
                    "ABIEncoderV2"
                ],
                "nodeType": "PragmaDirective",
                "src": "61:33:0"
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/hardhat/console.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/hardhat/console.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 11003,
                "src": "96:70:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 573,
                "src": "167:99:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 1513,
                "src": "267:98:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 1772,
                "src": "366:119:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 2749,
                "src": "486:103:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
                "file": "/home/abc/Swati/LazyMinting/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
                "id": 8,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 253,
                "sourceUnit": 2903,
                "src": "590:110:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 9,
                            "name": "ERC721URIStorage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1771,
                            "src": "719:16:0"
                        },
                        "id": 10,
                        "nodeType": "InheritanceSpecifier",
                        "src": "719:16:0"
                    },
                    {
                        "baseName": {
                            "id": 11,
                            "name": "EIP712",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2902,
                            "src": "737:6:0"
                        },
                        "id": 12,
                        "nodeType": "InheritanceSpecifier",
                        "src": "737:6:0"
                    },
                    {
                        "baseName": {
                            "id": 13,
                            "name": "AccessControl",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 572,
                            "src": "745:13:0"
                        },
                        "id": 14,
                        "nodeType": "InheritanceSpecifier",
                        "src": "745:13:0"
                    }
                ],
                "canonicalName": "Lazy",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 252,
                "linearizedBaseContracts": [
                    252,
                    572,
                    2902,
                    1771,
                    1512,
                    1798,
                    1628,
                    2926,
                    2938,
                    645,
                    2115
                ],
                "name": "Lazy",
                "nameLocation": "711:4:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "global": false,
                        "id": 17,
                        "libraryName": {
                            "id": 15,
                            "name": "ECDSA",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2748,
                            "src": "771:5:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "765:24:0",
                        "typeName": {
                            "id": 16,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "781:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "constant": true,
                        "functionSelector": "d5391393",
                        "id": 22,
                        "mutability": "constant",
                        "name": "MINTER_ROLE",
                        "nameLocation": "819:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "795:62:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "795:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "value": {
                            "arguments": [
                                {
                                    "hexValue": "4d494e5445525f524f4c45",
                                    "id": 20,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "843:13:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                        "typeString": "literal_string \"MINTER_ROLE\""
                                    },
                                    "value": "MINTER_ROLE"
                                }
                            ],
                            "expression": {
                                "argumentTypes": [
                                    {
                                        "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                        "typeString": "literal_string \"MINTER_ROLE\""
                                    }
                                ],
                                "id": 19,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "833:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                            },
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "833:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "pendingWithdrawals",
                        "nameLocation": "892:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "864:46:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                            "id": 25,
                            "keyType": {
                                "id": 23,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "872:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "864:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                            },
                            "valueType": {
                                "id": 24,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "883:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 44,
                            "nodeType": "Block",
                            "src": "1029:48:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 40,
                                                "name": "MINTER_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 22,
                                                "src": "1050:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 41,
                                                "name": "minter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "1063:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 39,
                                            "name": "_setupRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 480,
                                            "src": "1039:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 42,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1039:31:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 43,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1039:31:0"
                                }
                            ]
                        },
                        "id": 45,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4c617a794e4654",
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "968:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_bf3052008f16d282961f11ca872ab4622c4fedf08cb3271264cb49969a46be40",
                                            "typeString": "literal_string \"LazyNFT\""
                                        },
                                        "value": "LazyNFT"
                                    },
                                    {
                                        "hexValue": "4c415a",
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "979:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f4af9275df6d58a16311655a7372989eff656f69b10ff4da316ee6204897a51d",
                                            "typeString": "literal_string \"LAZ\""
                                        },
                                        "value": "LAZ"
                                    }
                                ],
                                "id": 33,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 30,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1512,
                                    "src": "961:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "961:24:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4c617a794e46542d566f7563686572",
                                        "id": 35,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1001:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f052f95a33109dff431ea69dec1a0c175842c11488c5ee2a81e41c1a7b77d09b",
                                            "typeString": "literal_string \"LazyNFT-Voucher\""
                                        },
                                        "value": "LazyNFT-Voucher"
                                    },
                                    {
                                        "hexValue": "31",
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1020:3:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                            "typeString": "literal_string \"1\""
                                        },
                                        "value": "1"
                                    }
                                ],
                                "id": 37,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 34,
                                    "name": "EIP712",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2902,
                                    "src": "994:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "994:30:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 29,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 28,
                                    "mutability": "mutable",
                                    "name": "minter",
                                    "nameLocation": "945:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 45,
                                    "src": "929:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    },
                                    "typeName": {
                                        "id": 27,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "929:15:0",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "928:24:0"
                        },
                        "returnParameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1029:0:0"
                        },
                        "scope": 252,
                        "src": "917:160:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "Lazy.NFTVoucher",
                        "id": 55,
                        "members": [
                            {
                                "constant": false,
                                "id": 48,
                                "mutability": "mutable",
                                "name": "tokenId",
                                "nameLocation": "1444:7:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 55,
                                "src": "1436:15:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 47,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1436:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 51,
                                "mutability": "mutable",
                                "name": "minPrice",
                                "nameLocation": "1592:8:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 55,
                                "src": "1584:16:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 50,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1584:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 54,
                                "mutability": "mutable",
                                "name": "uri",
                                "nameLocation": "1684:3:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 55,
                                "src": "1677:10:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 53,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1677:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "NFTVoucher",
                        "nameLocation": "1263:10:0",
                        "nodeType": "StructDefinition",
                        "scope": 252,
                        "src": "1256:438:0",
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 122,
                            "nodeType": "Block",
                            "src": "2193:897:0",
                            "statements": [
                                {
                                    "assignments": [
                                        69
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 69,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nameLocation": "2285:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 122,
                                            "src": "2277:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 68,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2277:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 74,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 71,
                                                "name": "voucher",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 61,
                                                "src": "2302:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            },
                                            {
                                                "id": 72,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 63,
                                                "src": "2311:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 70,
                                            "name": "_verify",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 230,
                                            "src": "2294:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_NFTVoucher_$55_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                                "typeString": "function (struct Lazy.NFTVoucher calldata,bytes memory) view returns (address)"
                                            }
                                        },
                                        "id": 73,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2294:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2277:44:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 77,
                                                        "name": "MINTER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "2425:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "id": 78,
                                                        "name": "signer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 69,
                                                        "src": "2438:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 76,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 332,
                                                    "src": "2417:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 79,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2417:28:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5369676e617475726520696e76616c6964206f7220756e617574686f72697a6564",
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2459:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b92d327e9213e089f04940c6c576fe1719e1d2718788e273487e1e37152590ee",
                                                    "typeString": "literal_string \"Signature invalid or unauthorized\""
                                                },
                                                "value": "Signature invalid or unauthorized"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b92d327e9213e089f04940c6c576fe1719e1d2718788e273487e1e37152590ee",
                                                    "typeString": "literal_string \"Signature invalid or unauthorized\""
                                                }
                                            ],
                                            "id": 75,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2396:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 81,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2396:108:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 82,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2396:108:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 88,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 84,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2605:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 85,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2605:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 86,
                                                        "name": "voucher",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 61,
                                                        "src": "2618:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                            "typeString": "struct Lazy.NFTVoucher calldata"
                                                        }
                                                    },
                                                    "id": 87,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "minPrice",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 51,
                                                    "src": "2618:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2605:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e73756666696369656e742066756e647320746f2072656465656d",
                                                "id": 89,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2636:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_89ba119abf2ed41a64a62537192f9dc364f9a9eaf4eea3973747d768b32755bb",
                                                    "typeString": "literal_string \"Insufficient funds to redeem\""
                                                },
                                                "value": "Insufficient funds to redeem"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_89ba119abf2ed41a64a62537192f9dc364f9a9eaf4eea3973747d768b32755bb",
                                                    "typeString": "literal_string \"Insufficient funds to redeem\""
                                                }
                                            ],
                                            "id": 83,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2597:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 90,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2597:70:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 91,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2597:70:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 93,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 69,
                                                "src": "2766:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 94,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 61,
                                                    "src": "2774:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 95,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 48,
                                                "src": "2774:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 92,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1222,
                                            "src": "2760:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 96,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2760:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 97,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2760:30:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 99,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 61,
                                                    "src": "2813:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 48,
                                                "src": "2813:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 101,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 61,
                                                    "src": "2830:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 102,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "uri",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54,
                                                "src": "2830:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            ],
                                            "id": 98,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1740,
                                            "src": "2800:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 103,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2800:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 104,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2800:42:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 106,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 69,
                                                "src": "2909:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 107,
                                                "name": "redeemer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 58,
                                                "src": "2917:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 108,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 61,
                                                    "src": "2927:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 109,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 48,
                                                "src": "2927:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 105,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1357,
                                            "src": "2899:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 110,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2899:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 111,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2899:44:0"
                                },
                                {
                                    "expression": {
                                        "id": 117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 112,
                                                "name": "pendingWithdrawals",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "3011:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 114,
                                            "indexExpression": {
                                                "id": 113,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 69,
                                                "src": "3030:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3011:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 115,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "3041:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "3041:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3011:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3011:39:0"
                                },
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 119,
                                            "name": "voucher",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "3068:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                "typeString": "struct Lazy.NFTVoucher calldata"
                                            }
                                        },
                                        "id": 120,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "tokenId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "3068:15:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 67,
                                    "id": 121,
                                    "nodeType": "Return",
                                    "src": "3061:22:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 56,
                            "nodeType": "StructuredDocumentation",
                            "src": "1700:338:0",
                            "text": "@notice Redeems an NFTVoucher for an actual NFT, creating it in the process.\n @param redeemer The address of the account which will receive the NFT upon success.\n @param voucher An NFTVoucher that describes the NFT to be redeemed.\n @param signature An EIP712 signature of the voucher, produced by the NFT creator."
                        },
                        "functionSelector": "1c098e90",
                        "id": 123,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "redeem",
                        "nameLocation": "2052:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 64,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 58,
                                    "mutability": "mutable",
                                    "name": "redeemer",
                                    "nameLocation": "2076:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "2068:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 57,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2068:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 61,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "2114:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "2094:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 60,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 59,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "2094:10:0"
                                        },
                                        "referencedDeclaration": 55,
                                        "src": "2094:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$55_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 63,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "2144:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "2131:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 62,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2131:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2058:101:0"
                        },
                        "returnParameters": {
                            "id": 67,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 66,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "2184:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 65,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2184:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2183:9:0"
                        },
                        "scope": 252,
                        "src": "2043:1047:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 161,
                            "nodeType": "Block",
                            "src": "3123:524:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 128,
                                                        "name": "MINTER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "3162:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 129,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "3175:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 130,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3175:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 127,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 332,
                                                    "src": "3154:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 131,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3154:32:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4f6e6c7920617574686f72697a6564206d696e746572732063616e207769746864726177",
                                                "id": 132,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3200:38:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_aa38e5d945eee09fe0ee94a833ea0df604d8bfe60a0a9cf71a3773cc0ea11d73",
                                                    "typeString": "literal_string \"Only authorized minters can withdraw\""
                                                },
                                                "value": "Only authorized minters can withdraw"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_aa38e5d945eee09fe0ee94a833ea0df604d8bfe60a0a9cf71a3773cc0ea11d73",
                                                    "typeString": "literal_string \"Only authorized minters can withdraw\""
                                                }
                                            ],
                                            "id": 126,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3133:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 133,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3133:115:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 134,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3133:115:0"
                                },
                                {
                                    "assignments": [
                                        136
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 136,
                                            "mutability": "mutable",
                                            "name": "receiver",
                                            "nameLocation": "3407:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 161,
                                            "src": "3391:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 135,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3391:15:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 142,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 139,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3426:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3426:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 138,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3418:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                                "id": 137,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3418:8:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3418:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3391:46:0"
                                },
                                {
                                    "assignments": [
                                        144
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 144,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nameLocation": "3456:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 161,
                                            "src": "3448:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 143,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3448:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 148,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 145,
                                            "name": "pendingWithdrawals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "3465:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                            }
                                        },
                                        "id": 147,
                                        "indexExpression": {
                                            "id": 146,
                                            "name": "receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 136,
                                            "src": "3484:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3465:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3448:45:0"
                                },
                                {
                                    "expression": {
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 149,
                                                "name": "pendingWithdrawals",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "3573:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 151,
                                            "indexExpression": {
                                                "id": 150,
                                                "name": "receiver",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "3592:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3573:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 152,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3604:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "3573:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 154,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3573:32:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 158,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 144,
                                                "src": "3633:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 155,
                                                "name": "receiver",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "3615:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "3615:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 159,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3615:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 160,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3615:25:0"
                                }
                            ]
                        },
                        "functionSelector": "3ccfd60b",
                        "id": 162,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "3105:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 124,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3113:2:0"
                        },
                        "returnParameters": {
                            "id": 125,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3123:0:0"
                        },
                        "scope": 252,
                        "src": "3096:551:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 172,
                            "nodeType": "Block",
                            "src": "3714:54:0",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 167,
                                            "name": "pendingWithdrawals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "3731:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                            }
                                        },
                                        "id": 170,
                                        "indexExpression": {
                                            "expression": {
                                                "id": 168,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "3750:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 169,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "3750:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3731:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 166,
                                    "id": 171,
                                    "nodeType": "Return",
                                    "src": "3724:37:0"
                                }
                            ]
                        },
                        "functionSelector": "e322ad2b",
                        "id": 173,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "availableToWithdraw",
                        "nameLocation": "3662:19:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 163,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3681:2:0"
                        },
                        "returnParameters": {
                            "id": 166,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 165,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 173,
                                    "src": "3705:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 164,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3705:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3704:9:0"
                        },
                        "scope": 252,
                        "src": "3653:115:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 204,
                            "nodeType": "Block",
                            "src": "4028:451:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4e4654566f75636865722875696e7432353620746f6b656e49642c75696e74323536206d696e50726963652c737472696e672075726929",
                                                                        "id": 187,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "4197:57:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a",
                                                                            "typeString": "literal_string \"NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)\""
                                                                        },
                                                                        "value": "NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a",
                                                                            "typeString": "literal_string \"NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)\""
                                                                        }
                                                                    ],
                                                                    "id": 186,
                                                                    "name": "keccak256",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967288,
                                                                    "src": "4158:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                    }
                                                                },
                                                                "id": 188,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4158:122:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            {
                                                                "expression": {
                                                                    "id": 189,
                                                                    "name": "voucher",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 177,
                                                                    "src": "4306:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                    }
                                                                },
                                                                "id": 190,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "tokenId",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 48,
                                                                "src": "4306:15:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "expression": {
                                                                    "id": 191,
                                                                    "name": "voucher",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 177,
                                                                    "src": "4347:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                    }
                                                                },
                                                                "id": 192,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "minPrice",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 51,
                                                                "src": "4347:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "expression": {
                                                                                    "id": 196,
                                                                                    "name": "voucher",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 177,
                                                                                    "src": "4405:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                                    }
                                                                                },
                                                                                "id": 197,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "uri",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 54,
                                                                                "src": "4405:11:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                                                    "typeString": "string calldata"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                                                    "typeString": "string calldata"
                                                                                }
                                                                            ],
                                                                            "id": 195,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "4399:5:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                                "typeString": "type(bytes storage pointer)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 194,
                                                                                "name": "bytes",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "4399:5:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 198,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "4399:18:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                                            "typeString": "bytes calldata"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                                            "typeString": "bytes calldata"
                                                                        }
                                                                    ],
                                                                    "id": 193,
                                                                    "name": "keccak256",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967288,
                                                                    "src": "4389:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                    }
                                                                },
                                                                "id": 199,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4389:29:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 184,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967295,
                                                                "src": "4122:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 185,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encode",
                                                            "nodeType": "MemberAccess",
                                                            "src": "4122:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 200,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4122:318:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 183,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967288,
                                                    "src": "4091:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 201,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4091:367:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 182,
                                            "name": "_hashTypedDataV4",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2901,
                                            "src": "4057:16:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes32) view returns (bytes32)"
                                            }
                                        },
                                        "id": 202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4057:415:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "functionReturnParameters": 181,
                                    "id": 203,
                                    "nodeType": "Return",
                                    "src": "4038:434:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 174,
                            "nodeType": "StructuredDocumentation",
                            "src": "3774:145:0",
                            "text": "@notice Returns a hash of the given NFTVoucher, prepared using EIP712 typed data hashing rules.\n @param voucher An NFTVoucher to hash."
                        },
                        "id": 205,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_hash",
                        "nameLocation": "3933:5:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 178,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 177,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "3959:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 205,
                                    "src": "3939:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 176,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 175,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "3939:10:0"
                                        },
                                        "referencedDeclaration": 55,
                                        "src": "3939:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$55_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3938:29:0"
                        },
                        "returnParameters": {
                            "id": 181,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 180,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 205,
                                    "src": "4015:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 179,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4015:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4014:9:0"
                        },
                        "scope": 252,
                        "src": "3924:555:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 229,
                            "nodeType": "Block",
                            "src": "4961:115:0",
                            "statements": [
                                {
                                    "assignments": [
                                        217
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 217,
                                            "mutability": "mutable",
                                            "name": "digest",
                                            "nameLocation": "4979:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 229,
                                            "src": "4971:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 216,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4971:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 221,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 219,
                                                "name": "voucher",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 209,
                                                "src": "4994:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            ],
                                            "id": 218,
                                            "name": "_hash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 205,
                                            "src": "4988:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_NFTVoucher_$55_calldata_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (struct Lazy.NFTVoucher calldata) view returns (bytes32)"
                                            }
                                        },
                                        "id": 220,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4988:14:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4971:31:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 226,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 211,
                                                "src": "5059:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 222,
                                                        "name": "digest",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 217,
                                                        "src": "5019:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 223,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2705,
                                                    "src": "5019:29:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 224,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5019:31:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2497,
                                            "src": "5019:39:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5019:50:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 215,
                                    "id": 228,
                                    "nodeType": "Return",
                                    "src": "5012:57:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 206,
                            "nodeType": "StructuredDocumentation",
                            "src": "4485:341:0",
                            "text": "@notice Verifies the signature for a given NFTVoucher, returning the address of the signer.\n @dev Will revert if the signature is invalid. Does not verify that the signer is authorized to mint NFTs.\n @param voucher An NFTVoucher describing an unminted NFT.\n @param signature An EIP712 signature of the given voucher."
                        },
                        "id": 230,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_verify",
                        "nameLocation": "4840:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 212,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 209,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "4868:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 230,
                                    "src": "4848:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$55_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 208,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 207,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "4848:10:0"
                                        },
                                        "referencedDeclaration": 55,
                                        "src": "4848:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$55_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 211,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "4890:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 230,
                                    "src": "4877:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 210,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4877:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4847:53:0"
                        },
                        "returnParameters": {
                            "id": 215,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 214,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 230,
                                    "src": "4948:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 213,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4948:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4947:9:0"
                        },
                        "scope": 252,
                        "src": "4831:245:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            313,
                            739
                        ],
                        "body": {
                            "id": 250,
                            "nodeType": "Block",
                            "src": "5240:133:0",
                            "statements": [
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 248,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "id": 242,
                                                    "name": "interfaceId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 232,
                                                    "src": "5294:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 240,
                                                    "name": "ERC721",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1512,
                                                    "src": "5269:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1512_$",
                                                        "typeString": "type(contract ERC721)"
                                                    }
                                                },
                                                "id": 241,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "supportsInterface",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 739,
                                                "src": "5269:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function (bytes4) view returns (bool)"
                                                }
                                            },
                                            "id": 243,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5269:37:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 246,
                                                    "name": "interfaceId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 232,
                                                    "src": "5354:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 244,
                                                    "name": "AccessControl",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 572,
                                                    "src": "5322:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AccessControl_$572_$",
                                                        "typeString": "type(contract AccessControl)"
                                                    }
                                                },
                                                "id": 245,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "supportsInterface",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 313,
                                                "src": "5322:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function (bytes4) view returns (bool)"
                                                }
                                            },
                                            "id": 247,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5322:44:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "5269:97:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 239,
                                    "id": 249,
                                    "nodeType": "Return",
                                    "src": "5250:116:0"
                                }
                            ]
                        },
                        "functionSelector": "01ffc9a7",
                        "id": 251,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "supportsInterface",
                        "nameLocation": "5091:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 236,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 234,
                                    "name": "AccessControl",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 572,
                                    "src": "5190:13:0"
                                },
                                {
                                    "id": 235,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1512,
                                    "src": "5205:6:0"
                                }
                            ],
                            "src": "5181:31:0"
                        },
                        "parameters": {
                            "id": 233,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 232,
                                    "mutability": "mutable",
                                    "name": "interfaceId",
                                    "nameLocation": "5116:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 251,
                                    "src": "5109:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    },
                                    "typeName": {
                                        "id": 231,
                                        "name": "bytes4",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5109:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5108:20:0"
                        },
                        "returnParameters": {
                            "id": 239,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 238,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 251,
                                    "src": "5230:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 237,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5230:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5229:6:0"
                        },
                        "scope": 252,
                        "src": "5082:291:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 253,
                "src": "702:4673:0",
                "usedErrors": []
            }
        ],
        "src": "37:5339:0"
    },
    "functionHashes": {
        "DEFAULT_ADMIN_ROLE()": "a217fddf",
        "MINTER_ROLE()": "d5391393",
        "approve(address,uint256)": "095ea7b3",
        "availableToWithdraw()": "e322ad2b",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "getRoleAdmin(bytes32)": "248a9ca3",
        "grantRole(bytes32,address)": "2f2ff15d",
        "hasRole(bytes32,address)": "91d14854",
        "isApprovedForAll(address,address)": "e985e9c5",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "redeem(address,(uint256,uint256,string),bytes)": "1c098e90",
        "renounceRole(bytes32,address)": "36568abe",
        "revokeRole(bytes32,address)": "d547741f",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1927200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "DEFAULT_ADMIN_ROLE()": "306",
            "MINTER_ROLE()": "261",
            "approve(address,uint256)": "infinite",
            "availableToWithdraw()": "2470",
            "balanceOf(address)": "2634",
            "getApproved(uint256)": "4792",
            "getRoleAdmin(bytes32)": "2489",
            "grantRole(bytes32,address)": "infinite",
            "hasRole(bytes32,address)": "2721",
            "isApprovedForAll(address,address)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2561",
            "redeem(address,(uint256,uint256,string),bytes)": "infinite",
            "renounceRole(bytes32,address)": "29090",
            "revokeRole(bytes32,address)": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26816",
            "supportsInterface(bytes4)": "infinite",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "withdraw()": "infinite"
        },
        "internal": {
            "_hash(struct Lazy.NFTVoucher calldata)": "infinite",
            "_verify(struct Lazy.NFTVoucher calldata,bytes memory)": "infinite"
        }
    }
}